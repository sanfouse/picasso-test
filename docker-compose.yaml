version: '3'

services:
  db:
    image: postgres:14
    container_name: db
    env_file:
      - .env
    ports:
      - '5433:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
    
  backend:
    build: .
    container_name: backend
    env_file:
      - .env
    environment:
      - HOST=db
      - PORT=5432
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy  

  redis:
    image: redis:7.2
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'

  backend-migrations:
    build: .
    env_file:
      - .env
    environment:
      - HOST=db
      - PORT=5432
    command: bash -c "make migrate"
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_started
  
  backend-superuser:
    build: .
    env_file:
      - .env
    environment:
      - HOST=db
      - PORT=5432
    command: bash -c "make create-superuser"
    depends_on:
      db:
        condition: service_healthy
      backend-migrations:
        condition: service_started
      backend:
        condition: service_started

  celery:
    build: .
    command: ['celery', '-A', 'file_processing_project', 'worker', '-l', 'info']
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - celery_data:/file_processing_project/celery_data  

volumes:
  redis_data:
  pg_data:
  celery_data:

